plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://maven.kyrptonaught.dev"}
	maven { url "https://api.modrinth.com/maven" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation 'net.kyrptonaught:customportalapi:0.0.1-beta63-1.19.4'
	include 'net.kyrptonaught:customportalapi:0.0.1-beta63-1.19.4'

	modImplementation('maven.modrinth:sodium:mc1.19.4-0.4.10') { exclude group: "net.fabricmc.fabric-api" }
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "id": mod_id, "version": project.version
	}
}


tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}
// 找到这个文件的 loom 部分，添加以下内容
loom {
	runs {
		// 这会添加一个运行数据生成 API 的新 gradle 任务："gradlew runDatagen"
		// 注意：在一些情况下，你可能需要将 inherit server 这一行更改为 inherit client
		datagen {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=${mod_id}"

			runDir "build/datagen"
		}

		// 用于生成client的json文件
		datagenClient {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.strict-validation"

			runDir "build/datagen"
		}
	}
}

// 数据生成是允许动态生成配方、语言文件、战利品表、进度等。
// 每次你修改生成数据的代码，你都会需要运行 gradle 任务 runDatagen
sourceSets {
	main {
		resources {
			srcDirs += ['src/main/generated']
		}
	}
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {

	}
}
